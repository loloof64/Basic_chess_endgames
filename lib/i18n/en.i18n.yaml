misc:
  appTitle: "Basic chess endgames"
  buttonOk: "Ok"
  buttonCancel: "Cancel"
  buttonAccept: "Accept"
  buttonDeny: "Deny"
  buttonValidate: "Validate"
pickers:
  documents_directory: "Documents"
  save_file_title: "Script's saving"
  open_script_title: "Script's opening"
  cancelled: "Selection dialog cancelled"
home:
  title: "Home"
  failedLoadingExercise: "Failed to load exercise : the chess position is not valid."
  failedGeneratingPosition: "Failed to generate the position."
  success_saving_exercice: "Exercice saved."
  failed_saving_exercise: "Failed to save the exercice."
  maxGenerationAttemptsAchieved:
    "Impossible to generate a position from these scripts : \
    maximum generation attempts surpassed.\n\nPlease check that your constraints \
    aren't too restrictive.\n\nAlso, please check that all of your variables are declared before use."
  misc_generating_error: "Failed to generate the position for a miscellaneous error."
  menu_buttons:
    samples: "Play an example"
    load_script: "Play a script"
    new_script: "New script"
    edit_script: "Edit script"
    show_sample_code: "Show the code of an example"
    clone_sample: "Clone the code of an example"
    generate_random_testing: "Generate random testing"
  goal_label: "Goal"
  win_label: "Win"
  draw_label: "Draw"
  errors_popup_labels:
    script_type: "Script type"
    position: "Position"
    position_short: "Pos."
    message: "Message"
sample_chooser:
  title: "Example chooser"
gamePage:
  title: "Game page"
  goalWin: "Goal: win"
  goalDraw: "Goal: draw"
  newGame_title: "Restart game ?"
  newGame_message: "Do you want to restart game ?"
  stopGame_title: "Stop current game ?"
  stopGame_message: "Do you want to stop current game ?"
  gameStopped: "Game stopped."
  checkmate_white: "White has won by checkmate."
  checkmate_black: "Black has won by checkmate."
  stalemate: "Stalemate."
  threeFoldRepetition: "Draw by three-fold repetition."
  missingMaterial: "Draw by missing material."
  fiftyMovesRule: "Draw by the 50 moves rule."
  beforeExitTitle: "Cancel current game ?"
  beforeExitMessage: "Do you want to leave this page and cancel current game ?"
  helpMessage:
    "Besides playing the game against the engine, you can flip the board, restart from the generated position, \
    but also stop game prematurely.\n \
    Once the game is over you will be able to review moves from the history component."
scriptParser:
  undefinedScriptType: "#Undefined#"
  missingScriptType: "Failed to generate position : please check that all of the script sections declares a correct script type."
  unrecognized_script_type: "Unrecognized script type : $type."
  miscErrorDialogTitle: "Global error"
  misc_checking_error: "The errors checking has failed for a miscellaneous error."
  misc_syntaxt_error_unknown_token: "Miscellaneous syntax error !"
  missing_result_value: "The script must set a boolean in the 'result' variable !"
scriptType:
  playerKingConstraint: "Player king constraint"
  computerKingConstraint: "Computer king constraint"
  kingsMutualConstraint: "Kings mutual constraint"
  otherPiecesGlobalConstraint: "Other pieces global constraint"
  otherPiecesIndexedConstraint: "Other pieces constraints by order"
  otherPiecesMutualConstraint: "Other pieces mutual constraint"
  pieceKindCountConstraint: "Piece kinds counts constraint"
  otherPiecesGlobalConstraintSpecialized: "Other pieces global constraint $pieceKind"
  otherPiecesIndexedConstraintSpecialized: "Other pieces constraints by order $pieceKind"
  otherPiecesMutualConstraintSpecialized: "Other pieces mutual constraint $pieceKind"
side:
  player: player
  computer: computer
type:
  pawn: pawn
  knight: knight
  bishop: bishop
  rook: rook
  queen: queen
  king: king
sampleScript:
  kqK: "King+Queen | King"
  krK: "King+Rook | King"
  krrK: "King+2 Rooks | King"
  kbbK: "King+Rook | King"
  kpK1: "King+Pawn | King (1)"
  kpK2: "King+Pawn | King (2)"
  kpppKppp: "King+3 Pawns | King+3 Pawns"
  rookEndingLucena: "Lucena rook ending"
  rookEndingPhilidor: "Philidor rook ending"
script_editor_page:
  title: "Script editor page"
  no_content_yet : "Select a piece kind."
  player_king_constraint: "Player's king's constraints"
  computer_king_constraint: "Computer's king's constraints"
  kings_mutual_constraint: "Kings's mutual constraints"
  other_pieces_count_constraint: "Other pieces' count's constraints"
  other_pieces_global_constraint: "Other pieces' global constraints"
  other_pieces_mutual_constraint: "Other pieces' mutual constraints"
  other_pieces_indexed_constraint: "Other pieces constraints by order"
  game_goal: "Game's goal"
  add_count: "Add"
  type_already_added: "Already added this type."
  should_win: "Win"
  should_draw: "Draw"
  beforeExitTitle: "Cancel script edition ?"
  beforeExitMessage: "Do you want to leave this page and cancel script edition ?"
  exercise_creation_success: "Saved exercise"
  exercise_creation_error: "Failed to save exercise !"
  insert_variable_title: "Insert a predifined variable"
  consult_variables_title: "Consult predefined variables"
  choice_common_constants: "Common constants"
  choice_script_variables: "Variable for the script type"
  invalid_script: "The script has some errors. Please correct them."
variables_table:
  headers:
    variable_name: "Name"
    variable_description: "Description"
    variable_type: "Type"
  rows:
    file_a:
      description: "The 'A' file"
      type: "Integer"
    file_b:
      description: "The 'B' file"
      type: "Integer"
    file_c:
      description: "The 'C' file"
      type: "Integer"
    file_d:
      description: "The 'D' file"
      type: "Integer"
    file_e:
      description: "The 'E' file"
      type: "Integer"
    file_f:
      description: "The 'F' file"
      type: "Integer"
    file_g:
      description: "The 'G' file"
      type: "Integer"
    file_h:
      description: "The 'H' file"
      type: "Integer"
    rank_1:
      description: "The '1' rank"
      type: "Integer"
    rank_2:
      description: "The '2' rank"
      type: "Integer"
    rank_3:
      description: "The '3' rank"
      type: "Integer"
    rank_4:
      description: "The '4' rank"
      type: "Integer"
    rank_5:
      description: "The '5' rank"
      type: "Integer"
    rank_6:
      description: "The '6' rank"
      type: "Integer"
    rank_7:
      description: "The '7' rank"
      type: "Integer"
    rank_8:
      description: "The '8' rank"
      type: "Integer"
    king_file:
      description: "The king's file"
      type: "Integer"
    king_rank:
      description: "The king's rank"
      type: "Integer"
    player_has_white:
      description: "Does the player have white side ?"
      type: "Boolean"
    player_king_file:
      description: "The player's king's file"
      type: "Integer"
    player_king_rank:
      description: "The player's king's rank"
      type: "Integer"
    computer_king_file:
      description: "The computer's king's file"
      type: "Integer"
    computer_king_rank:
      description: "The computer's king's rank"
      type: "Integer"
    piece_file:
      description: "The piece's file"
      type: "Integer"
    piece_rank:
      description: "The piece's rank"
      type: "Integer"
    apparition_index:
      description: "The index of order of apparition for the piece (starts at 0)"
      type: "Integer"
    first_piece_file:
      description: "The first piece's file"
      type: "Integer"
    first_piece_rank:
      description: "The first piece's rank"
      type: "Integer"
    second_piece_file:
      description: "The second piece's file"
      type: "Integer"
    second_piece_rank:
      description: "The second piece's rank"
      type: "Integer"
syntax_manual_page:
  title: "Manual of syntax"
  introduction:
    title: "Introduction"
    part_1: "In order to generate a position, the algorithm must be told which constraints it must respect."
    part_2: "These constraints are dispatched among several types, and you can define a script for each."
    part_3: "We'll see more about constraints later."
    part_4: "The program uses a Lua 5.3 Virtual Machine in order to interpret the scripts."
  explaining_generation_algorithm:
    title: "Explaining the generation algorithm"
    general_considerations:
      title: "General considerations"
      part_1_1: "The algorithm starts with an empty board, and try to place each piece one after the other."
      part_1_2: "Of course, it checks for the fact that the legal chess rules are respected."
      part_1_3: "But it also checks that, for the current piece kind, the contraints - if any - defined for it are respected."
      part_1_4: "By piece kind, we mean, for example, a Rook belonging to the Computer, or a Pawn belonging to the Player."
      part_2_1: "So each constraints is defined in a script, written in a subset of Lua as stated earlier."
      part_2_2: "Each script has access to some predefined variables, whose values will be provided by the algorithm, but also some coordinates constants."
      part_2_3: "You can have access to each script predefined variables and constants, and insert their names, by accessing the helper box for the script you're editing."
      part_2_4: "But, above all - and that's how the algorithm will know if your constraints are respected - each script must define a 'result' boolean value."
      part_3_1: "If at any step, the constraints are not respected for the last placed pieces, the algorithm will try to place it somewhere else."
      part_3_2: "So it avoid restarting from scratch at each failure."
    order_of_scripts_evaluations:
      title: "Order of script evaluations"
      part_1_1: "The first steps of the algoritm are quite simples:"
      part_1_2: "*) it starts to place the player's king, and use the player's king constraints script if defined for a check"
      part_1_3: "*) it then places the computer's king, and use the computer's king constraints script, and also the kings mutual constraints script"
      part_2_1: "The following steps are a bit more complex. It uses the count constraints in order to know how many pieces of each kind it must generate."
      part_2_2: "Then, for each single piece of a given kind, it places one after other and performs several checks:"
      part_2_3: "*) it use the global constraints for this kind, in order to see if the overall constraints for this kind is respected"
      part_2_4: "*) it use the indexed constraints for this kind, in order to see if the constraints relative to the apparation order of the current piece in its kind group is respected"
      part_2_5: "*) it use the mutual constraints for this kind, in order to see if the contraints relative to two pieces of the same kind is each other respected"
  goal_of_position:
    title: "Goal of the position"
    part_1: "You can define the goal of the position (to win or to draw)."
    part_2: "Keep in mind that it won't affect the algorithm : it's just an information for the player of the position."
random_testing:
  parameters_dialog:
    title: "Random testing parameters"
    images_count: "Images count"
    intermediates_positions_level: "Intermediates positions level"
    intermediates_positions_level_none: "None"
    intermediates_positions_level_with_max_pieces: "Only positions which not include only king(s)"
    intermediates_positions_level_all: "All"
  title: "Random testing"
  tab_generated_positions: "Generated"
  tab_rejected_positions: "Rejected"
options:
  title: "Options"
  dark_mode: 
    label: "Dark mode"
    on: "on"
    off: "off"